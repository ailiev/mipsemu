<date>Mon Mar  6 13:29:06 2006</date>

How to get a list of all instructions used in an objdump disassembly:
> mipsel-linux-objdump -d simple | pcregrep '^\s+(\d|[a-f])+:' | awk '{print $3}' | sort | uniq

and a list of all the binary instructions:
mipsel-linux-objdump -d simple | pcregrep '^\s+(\d|[a-f])+:' | awk '{print $2}'


register usage: both rt and rd are used as result registers in instruction
formats, depending on whether rt is used for an operand too.


<date>Thu Mar  9 15:01:51 2006</date>

We're ignoring overflow exceptions for now, just doing signed and unsigned
arithmetic instructions identically.


<date>Fri Mar 17 17:50:27 2006</date>

How does mmap happen?

The static function do_mmap in alloc.c calls the mmap assembly stub which just
enters the syscall number into v0 and executes 'syscall'. The MIPS setup is
clean enough that the stack and parameter setup created for the mmap() call from
do_mmap can be used direclty by the syscall.

